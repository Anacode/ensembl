
module Ensembl {
  module artemis {
    
    interface Sequence {
      string getSubSequence(in long start,in long end);
      long length();
    };
    
    struct Qualifier {
	string name;
	sequence<string> values;
    };

    typedef sequence <Qualifier> QualifierList;

    interface Feature {
	string getKey();
	string getLocation();
	QualifierList getQualifiers();
    };

    typedef sequence <Feature> FeatureList;

    interface Entry {
	string getName(); // accession number usually.
	long getFeatureCount(); 
	FeatureList getAllFeatures();
	Sequence getSequence();
    };

    typedef sequence<string> EntryNameList;
    interface DB {
      Entry getEntry(in string entryname);
      EntryNameList getallEntryNames();
    };
  };
};








