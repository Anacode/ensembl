
The artemis corba server is a C based orb server which connects to
MySQL on the backend. To make this work, you need a C ORB and MYSQL
development libaries. If you dont have them, these are freely
available and portable to most UNIX systems. Maximum portability is
definitely on linux systems, where this server was developed (redhat
if people are interested). Next up are Solaris, then SGI and finally
Alpha (compiling ORBit on alphas tends to be interesting).

        For linux users, and people with a good GNU step up, you may
have all the tools already here. This is generally when you have installed
linux in a "development" mode. For gnu systems, if you have the gnome desktop
compiled on your system, you have a working ORBit ORB already. 

To see whether you have orbit or not, go

        which orbit-idl

and it should be there if ORBit has been installed

To see whether you have mysql or not go

        mysql (you should come up with the mysql prompt. Go quit to get out)

        Now look in /usr/include/ - there should be a mysql directory
in there. If not, you need to install mysql client libraries (if you are
installing binary versions, then make sure it is the same version as your
server).

NO WORRIES if you don't have them installed. Generally it is easy to install,
using the standard GNU system of ./configure, make, make install
  
	a) Compiling ORBIT to http://www.gnome.org/ for ORBit
downloads. ORBit itself needs indent (ftp.gnu.org),
gettext(ftp.gnu.org) and glib (ftp.gtk.org).  Download the tarballs
for these and go

        ./configure
        make
        <become root>
        make install.

Do this for indent, gettext and glib first, then orbit.

If you are not root, simply

	a) make a directory called /.../somewhere/Icanwriteto/local/

        b) go .configure --prefix=/.../somewhere/Icanwriteto/local/

        c) make sure your LD_LIBRARY_PATH points to .../local/lib and 
your path has .../local/bin so that the libaries are picked up correctly.

At this point, if something is not working, then here is a checklist:

     - the correct version of glib - ORBit tends to need an up to date
version of Glib, (1.2 or greater). go glib-config to see what version
you have.

     - LD_LIBRARY_PATH needs to be set correctly. It should point somewhere
like /usr/local/lib or whereever the libraries get put

   b) Installing MySQL. This is an abbreviated version, as you should
really read the "installing ensembl on mysql" documentation on the web
site. What you need in particular here are the development libaries. MySQL
installs from source fine on most systems, and if this is the case, then
you would have built the development libaries.

   Pick up mysql tarball from one of the download sites listed in
www.mysql.org. Compile as usual using ./configure, make, <become root>,
make install. See above for not compiling with root permissions. You then
need to intialise the database by going mysql_install_db, and set root
passwords and some user passwords. Then you need to download the ensembl
test data from ftp.sanger.ac.uk/pub/ensembl/alpha , initialise the database
from the sql/table.sql found in the ensembl source code and load the database.

There is a perl script in the ensembl source code which provides considerable
more hand holding than this description. Check it out at 
scripts/install_ensembl.pl.


     c) popt libraries.

The ensembl source now bundles the popt command line parsing libaries.
Simple cd into ensembl/corba/popt, go ./configure, and make. The servers
will find these libraries as a relative path from their source directory


     d) SimpleObjectManager

The corba standard does not provide any standard as to how to manage objects.
I wrote a simple object manager to provide time-to-lease memory management
and maximum object counts. It is in corba/simpleobjectman. You need to
cd into that directory and type make.


     e) Building the servers.

Having built the popt libraries and the simpleobjectmanager, go

      orbit-idl artemis.idl 

and then

      make ensembl-artemis-server
      make ensembl-artemis-client

This builds the server and the client. To run the server, go 

    ./ensembl-artemis-server

    ./ensembl-artemis-server --help gives you options

Try out the client by going

    ./ensembl-artemis-client

The server writes out the file db.ior which the client reads. Of course, the
server must be running to allow the client to work.

