
  A quick note about what we should do with Maps.
(perhaps).

  Here is the idea: We can store any number of Maps,
which hold order of markers in arbitary units. One
marker can be on more than one map, and maps can
overlap/be inconsistent. We do not store how these
maps were made, multipoint or pairwise point lod scores etc.
This we rely on external links to the map database we got
the information from.

  Markers have a db:accession type field to indicate where they came
from, and can optionally be linked to a Feature, which has a place on
a contig. By using this link (feature<->Marker) we can get on overlap
between maps:

(map1 -> markers -> features -> contig ) & ( map2 -> markers -> features ->contig)

As long as this is relatively cheap way of getting out stuff from the
rdb (it may or may not), hopefully it will be fine to display stuff
using this sort of SQL query.

Maps can be used to represent the partial ordering information of some
contigs in clones via gene prediction.

I think we need two other data structures to help us:


a) Bins. A bin has no ordering, but just says these things are
grouped.  Possibly useful for clones with contigs and clones on
chromosones.

b) Overlaps. As contigs grow, we will getting overlapping clones.
We need to handle that sensibly so that we can 
   i) find these overlaps - James Gilbert has alot of code for this
   ii) traverse the contig overlap (finished clones = one contig),
   with features 'on the link' object. 

Fun fun fun...


