# cp chr region from db

use strict;
use Bio::EnsEMBL::DBSQL::DBAdaptor;

open SGP, "> sgp.out" or die;
open DNA, "> dna.out" or die;
open CLONE, "> clone.out" or die;
open CTG, "> ctg.out" or die;

my $chr_name = '';
my $chr_start = ;   # -1 to start at chr start
my $chr_end =       # -1 to end at chr end;
my $type = '';

$, = "\t";

my $src = Bio::EnsEMBL::DBSQL::DBAdaptor->new(
    -dbname => '',
    -host   => '',
    -user   => 'ensro'
);

my $sth = $src->prepare(qq{
    SELECT *
    FROM   static_golden_path
    WHERE  chr_name = ?
    AND    type = ?
    ORDER  by chr_start
});

$sth->execute($chr_name, $type);

my @contigs;
my @row;

while (@row = $sth->fetchrow_array) {
    my ($ctg, $start, $end) = @row[2, 3, 4];

    next if $start < $chr_start && $chr_start >= 0;
    last if $end > $chr_end && $chr_end >= 0;

    push @contigs, $ctg;
    print SGP @row, "\n";
}

my $where = '(' . join(',', @contigs) . ')';

my $sth = $src->prepare(qq{
    SELECT *
    FROM   contig
    WHERE  internal_id in $where
});

$sth->execute();

while (@row = $sth->fetchrow_array) {
    print CTG @row, "\n";
}

my $sth = $src->prepare(qq{
    SELECT distinct clone.*
    FROM   clone, contig
    WHERE  contig.internal_id in $where
    AND    clone.internal_id = contig.clone
});

$sth->execute();

while (@row = $sth->fetchrow_array) {
    print CLONE @row, "\n";
}

my $sth = $src->prepare(qq{
    SELECT *
    FROM   dna, contig
    WHERE  contig.internal_id in $where
    AND    dna.id = contig.dna
});

$sth->execute();

while (@row = $sth->fetchrow_array) {
    print DNA @row, "\n";
}

close DNA;
close SGP;
close CTG;
close CLONE;

$sth->finish;

$src->DESTROY;
