#!/usr/local/ensembl/bin/perl -w

# Output a transcript (or raw contig) and its supporting evidence
# (or similarity features) in Fasta format, to stdout.
# Can also output more than one such alignment.
#
# usage: aligner [--user <username>] [--pass <password>] [--dbname <dbname>] \
#        [--host <host>] --transcript|contig <id> [<id>...]
#
# For example:
#
# aligner --transcript ENST00000279043 > ENST00000279043.fa
#
# aligner --contig --host ecs1h --dbname homo_sapiens_core_4_28 \
# --user ensro AL356104.6.1.96693 > AL356104.6.1.96693.fa
#
# It isn't possible to mix contigs and transcripts in the same command.

use constant DEFAULT_USER   => 'anonymous';
use constant DEFAULT_DBNAME => 'current';
use constant DEFAULT_HOST   => 'kaka.sanger.ac.uk';

use strict;
use Getopt::Long;
use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::EnsEMBL::EvidenceAlignment;

sub usage_die {
  die "Usage: $0 [--user <username>] [--pass <password>] [--dbname <dbname>] [--host <host>] --transcript|contig <id> [<id>...]";
}

# main program

my ($using_transcripts, $using_contigs, $user, $pass, $dbname, $host);

GetOptions("transcript" => \$using_transcripts,
           "contig"     => \$using_contigs,
	   "user=s"     => \$user,
	   "pass=s"     => \$pass,
	   "dbname=s"   => \$dbname,
	   "host=s"     => \$host
          ) or usage_die();

usage_die()
  if ( ( $using_transcripts and  $using_contigs)
    || (!$using_transcripts and !$using_contigs) );

$user = DEFAULT_USER if (!$user);
$dbname = DEFAULT_DBNAME if (!$dbname);
$host = DEFAULT_HOST if (!$host);

my $db = new Bio::EnsEMBL::DBSQL::DBAdaptor(-user   => $user,
                                            -pass   => $pass,
                                            -dbname => $dbname,
					    -host   => $host
					   );

my $ea = Bio::EnsEMBL::EvidenceAlignment->new(-DBADAPTOR => $db);

foreach my $id (@ARGV) {
  if ($using_transcripts) {
    $ea->transcriptid($id);
  } else {
    $ea->contigid($id);
  }
  my $evidence_seq_arr_ref;
  eval {
    $evidence_seq_arr_ref = $ea->fetch_alignment;
  };
  if ($@) {
    die "error: can't fetch alignment for $id\n";
  }
  foreach my $evidence_obj (@$evidence_seq_arr_ref) {
    print ">", $evidence_obj->accession_number , "\n";
    print $evidence_obj->seq , "\n";
  }
}
