#!/usr/local/ensembl/bin/perl -w

# Output a transcript (or raw contig) and its supporting evidence
# (or similarity features) in Fasta format, to stdout.
# Can also output more than one such alignment.
#
# usage: aligner --transcript|contig <id> [<id> ...]
#
# For example:
# aligner --transcript ENST00000286945
# aligner --transcript ENST00000279043 ENST00000217176
# aligner AL356104.6.1.96693
#
# It isn't possible to mix contigs and transcripts in the same command.

use strict;
use Getopt::Long;
use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::EnsEMBL::EvidenceAlignment;

# database details
my $host = 'ecs1h';
my $user = 'ensro';
my $dbname = 'homo_sapiens_core_4_28';

# main program

my $using_transcripts;
my $using_contigs;

GetOptions("transcript" => \$using_transcripts,
           "contig"     => \$using_contigs
          ) or die "Usage: $0 --transcript|contig <id> [<id> ...]";

if ($using_transcripts and $using_contigs) {
  die "Usage: $0 --transcript|contig <id> [<id> ...]";
}
if (! $using_transcripts and ! $using_contigs) {
  die "Usage: $0 --transcript|contig <id> [<id> ...]";
}

my $db = new Bio::EnsEMBL::DBSQL::DBAdaptor(-host   => $host,
                                            -user   => $user,
                                            -dbname => $dbname);

my $ea = Bio::EnsEMBL::EvidenceAlignment->new(-DBADAPTOR => $db);

foreach my $id (@ARGV) {
  if ($using_transcripts) {
    $ea->transcriptid($id);
  } else {
    $ea->contigid($id);
  }
  my $evidence_seq_arr_ref;
  eval {
    $evidence_seq_arr_ref = $ea->fetch_alignment;
  };
  if ($@) {
    die "error: can't fetch alignment for $id\n";
  }
  foreach my $evidence_obj (@$evidence_seq_arr_ref) {
    print ">", $evidence_obj->accession_number , "\n";
    print $evidence_obj->seq , "\n";
  }
}
