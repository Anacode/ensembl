#!/usr/local/bin/perl

use strict;

use Bio::EnsEMBL::DBLoader;
use Bio::EnsEMBL::DBSQL::Obj;
use Bio::EnsEMBL::AceDB::Obj;
use Getopt::Long;
use Time::Local;

my $dbtype1 = 'rdb';
my $host1   = 'obi-wan';
my $dbname1 = 'ens500';
my $dbuser1 = 'ensro';
my $dbpass1 = undef;
my $port1   = 3306;

my $infile  = '';
$| = 1;
&GetOptions( 'dbtype1:s'  => \$dbtype1,
	     'host1:s'    => \$host1,
	     'port1:n'    => \$port1,
	     'dbname1:s'  => \$dbname1,
	     'dbpass1:s'  => \$dbpass1,
	     'infile=s'   => \$infile,
	     );

my $db = new Bio::EnsEMBL::DBSQL::Obj(-host => $host1,
	 -user => 'ensro',
	-dbname => $dbname1);
my @ids = $db->get_all_Clone_id;

my $i = 0;
open OUT,">chr22.cdna";
foreach my $cloneid (@ids) {
    print("Processing clone " . $cloneid . "\n");
    eval {
    my $cl1    = $db->get_Clone($cloneid);

    my @genes1 = $cl1->get_all_Genes();

    my $count = 1;

    foreach my $gene1 (@genes1) {
        print "Found gene " . $gene1->id . "\n";
        my @cdna;

        foreach my $tran ($gene1->each_Transcript) {
            my $pep;
            foreach my $exon ($tran->each_Exon) {
              $pep .= $exon->seq->seq;
            }
            push(@cdna,$pep);
        }

        my $maxlen;
        my $finalpep;

        if ($#cdna >= 0) {
	  foreach my $p (@cdna) {
	     if (length($p) > $maxlen) {
               $finalpep = $p;
               $maxlen   = length($p);
             }
             print OUT ">" . $gene1->id . "\n";
             $p =~ s/(.{72})/$1\n/g;
             print OUT $p . "\n";
         }
        }

    }
  };
    if ($@) {
      print("Error processing clone: $@\n");
    }
  }
close(OUT);
sub get_cloneids {
    my ($infile,@ARGV) = @_;

    my @clone1;
    my @acc;

    if (defined($infile)) {
	open(IN,"<$infile");
	while (<IN>) {
	    chomp;
            my ($clone,$acc) = split (' ',$_);	
	    push(@clone1,$clone);
            push(@acc,$acc); 
	}
	close(IN);
    }
    while ($#ARGV > 0) {
	my $clone1 = shift @ARGV;
	push(@clone1,$clone1);
    }
    return (\@clone1,\@acc);
}



