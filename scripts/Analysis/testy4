#!/usr/local/bin/perl

BEGIN {
  unshift (@INC,"/home/michele/cvs/ensembl/modules");
  unshift (@INC,"/home/michele/cvs/bioperl-live");
}

use Bio::EnsEMBL::Analysis::Genscan;
use Bio::EnsEMBL::Analysis::PepAlign;
use Bio::EnsEMBL::Analysis::PairAlign;
use Bio::EnsEMBL::Analysis::pep_SeqFeature;
use Bio::SeqFeature::Homol;
use Bio::Seq;

use strict;

my $genfile  = shift;
my $dnafile  = shift;
my $gsdna    = new Bio::Seq(-file   => $dnafile,
			    -format => 'Fasta');

my $gs       = new Bio::EnsEMBL::Analysis::Genscan($genfile,$gsdna);

my @genes    = $gs->each_Transcript;
my @coords   = shift;

 GENE: foreach my $g (@genes) {
     my $pair    = new Bio::EnsEMBL::Analysis::PairAlign;
     
     $g->sort;
     
     my ($start,$end)    = find_len($g);
     my $cdnacoord = 1;
     
     foreach my $ex ($g->each_Exon) {
	 my $genomic_homol   = new Bio::SeqFeature::Homol(-start  => $ex->start,
							  -end    => $ex->end,
							  -strand => $ex->strand);
	 
	 my $end = ($ex->end - $ex->start  + $cdnacoord);
	 
	 my $cdna_homol = new Bio::SeqFeature::Generic(-start  => $cdnacoord,
						       -end    => $end
						       -strand => 1,
						       );
	 $cdna_homol->strand(1);

	 $genomic_homol->homol_SeqFeature($cdna_homol);
	 
	 $pair->addHomol($genomic_homol);
	 $cdnacoord  = $end + 1;
     }
     
     
     foreach my $c (@coords) {
	 my $gen = $pair->cDNA2genomic($c);
	 print("Coord $gen $c\n");
     }
 }

sub find_len {
    my ($g) = @_;

    my $min = 1000000;
    my $max = -1;

    foreach my $ex ($g->each_Exon) {
	if ($ex->start >= $max) {$max = $ex->start;}
	if ($ex->start <= $min) {$min = $ex->start;}

	if ($ex->end >= $max) {$max = $ex->end;}
	if ($ex->end <= $min) {$min = $ex->end;}
    }

    return ($min,$max);
}


