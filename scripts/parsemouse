#!/usr/local/bin/perl

use strict;

use Bio::EnsEMBL::DBSQL::Obj;
use Bio::EnsEMBL::SeqFeature;
use Bio::EnsEMBL::FeaturePair;
use Bio::EnsEMBL::Analysis;

my $db1 = new Bio::EnsEMBL::DBSQL::Obj(-host   => 'ecs1c',
				       -dbname => 'ensembl080',
				       -user => 'ensro');

my $db2 = new Bio::EnsEMBL::DBSQL::Obj(-host   => 'ecs1a',
				       -dbname => 'mouse_exonerate',
				       -user => 'ensadmin');


my $analysis = new Bio::EnsEMBL::Analysis(-id              => 1,
					  -logical_name    => 'exonerate_gapped',
					  -db              => 'exonerate_gapped',
					  -db_version      => '',
					  -db_file         => '',
					  -program         => 'exonerate',
					  -program_version => 1,
                                          -program_file    => 'exonerate',
					  -gff_source      => 'exonerate_gapped',
					  -gff_feature     => 'similarity',
					  -module          => '',
					  -module_version  => '',
					  -parameters      => '',
					  -created         => ''
					 );

$db2->feature_Obj->write_Analysis($analysis);

my $file = $ARGV[0];

open(IN,"<$file") || die "Couldn't open file $file\n";

my $prevcontig;
my @features;

while (<IN>) {
  my ($traceid,$trace_start,$trace_end,$trace_strand,$contig,$contig_start,$contig_end,$contig_strand,$score,$dum,$matches) = 
    split(' ',$_,11);

  my $strand = 1;
  
  if ($trace_strand eq "-") {
    $strand = -1;
  }
  my @matches = split(' ',$matches);
  my $i = 0;
  my $matchcount = 0;
  my $totalcount = 0;
  for ($i = 0; $i <= $#matches; $i += 2) {
      if ($matches[$i] eq "M")  {
          $matchcount += $matches[$i+1];
      }
      $totalcount += $matches[$i+1];
  }
  my $pid = int($matchcount*100/$totalcount);

  my $feature1 = new Bio::EnsEMBL::SeqFeature(-seqname     => $contig,
					      -source_tag  => 'exonerate_gapped',
					      -primary_tag => 'similarity',
					      -start       => $contig_start,
					      -end         => $contig_end,
					      -strand      => $strand,
					      -score       => $score,
					      -percent_id  => $pid);

  my $feature2 = new Bio::EnsEMBL::SeqFeature(-seqname    => $traceid,
					      -source_tag => 'exonerate_gapped',
					      -primary_tag => 'similarity',
					      -start   => $trace_start,
					      -end     => $trace_end,
					      -strand  => $strand,
					      -score   => $score,
					      -percent_id => $pid);

  $feature1->score($score);
  $feature2->score($score);

  $feature1->percent_id($pid);
  $feature2->percent_id($pid);

  my $fp = new Bio::EnsEMBL::FeaturePair(-feature1 => $feature1,
					 -feature2 => $feature2);


  $feature1->analysis($analysis);
  $feature2->analysis($analysis);

  $fp->score($score);
  $fp->percent_id($pid);

  if ($contig ne $prevcontig) {
    if ($prevcontig ne "") {

#      my $internal_id;
#      my $contigobj;

      
#      my $sth = $db2->prepare("select internal_id from contig where id = '$prevcontig'");
#      $sth->execute;
#      my $row = $sth->fetchrow_hashref;
#      my $internal_id = $internal_id = $row->{'internal_id'};

#      if (!defined($internal_id)) {

#        print STDERR "Error $prevcontig [$@] doesn't exist\n";
#	$contigobj = $db1->get_Contig($prevcontig);
#	undef $contigobj->{'internal_id'};
#	print STDERR "Done\n";
#        $db2->write_Contig($contigobj,$contigobj->cloneid);
#	$contigobj = $db2->get_Contig($prevcontig);
#	print STDERR "Done write\n";
#	$internal_id = $contigobj->internal_id;
#      }
#      foreach my $f (@features) {
#	my $query = 
#                  "insert into feature(id,contig,seq_start,seq_end,score,strand,name,analysis,hstart,hend,hid,perc_id,evalue,phase,end_phase) ".
#                  "values ('NULL',"
#                  .$internal_id     .","
#                  .$f->start          .","
#                  .$f->end            .","
#                  .$f->score          .","
#                  .$f->strand         .","
#                  ."'".$f->source_tag."',"
#                  ."8"              .","
#                  .$f->hstart            .","
#                  .$f->hend              .","
#                  ."'".$f->hseqname      ."',"
#                  .((defined $f->percent_id)   ? $f->percent_id  : 'NULL')  .","    
#                  .((defined $f->p_value)      ? &exponent($f->p_value)     : 'NULL')  .","
#                  .((defined $f->phase)        ? $f->phase       : 'NULL')  .","
#                  .((defined $f->end_phase)    ? $f->end_phase   : 'NULL')  .")";

#	my $sth = $db2->prepare($query);
#	$sth->execute;
#      }
#      print STDERR "Number of features $#features $internal_id\n";


     } 
      @features = ();

    $prevcontig = $contig;
    push(@features,$fp);

  } else {
    push(@features,$fp);
  }
}

#my $contigobj = $db1->get_Contig($prevcontig);

eval {
#   $db2->write_Contig($contigobj,$contigobj->cloneid);
};
if ($@)  {
   print STDERR "Error $prevcontig [$@]\n";
}

foreach my $f (@features) {
        print $f->gffstring .  " " . $f->percent_id . "\n";
}
print STDERR "Number of features $#features\n";

#$db2->feature_Obj->write($contigobj,@features);

