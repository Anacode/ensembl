#!/usr/local/bin/perl

BEGIN {
  my $rootdir = "/nfs/disk89/michele/pogdir";

  unshift (@INC,"$rootdir/PerlModules");
  unshift (@INC,"$rootdir/ensembl/modules");
  unshift (@INC,"$rootdir/bioperl-live/");
}

use strict;

use Bio::SeqIO;
use Bio::Root::Object;
use Bio::EnsEMBL::DB::Obj;
use Bio::EnsEMBL::Analysis::DNAparse;
use Bio::EnsEMBL::PerlDB::Contig;
use DBI;

my $clonedir = $ARGV[0];

my $clone    = $clonedir;
   $clone    =~ s/.*\/(.*)$/$1/;

my $dnafile  = $clonedir . "/" . $clone . ".seq";


die "No DNA file input for $clone ($dnafile)" unless  -e $dnafile;

my $obj = Bio::EnsEMBL::DB::Obj->new(-host   => 'croc',
				     -user   => 'root',
				     -db     => 'pog');

my $in  = Bio::SeqIO->new           (-file   => $dnafile,
			             -format => 'Fasta');

if ($obj) {
  print("Connected to database\n");
} else {
  die "Couldn't connect to database";
}

if ($in) {
  print("Opened sequence stream from $dnafile\n");
} else {
  die "No input sequences stream"    unless $in;
}

while (my $seq = $in->next_seq) {

  my $clone = $seq->id;     $clone =~ s/(.*)\..*/$1/;

  print("Clone $clone : contig length " . $seq->seq_len . "\n");


  my $old_contig = $obj->get_Contig($seq->id);
  my $old_seq;

  eval {
    $old_seq    = $old_contig->seq;
  }; 

  if ($@) {
    print("No dna associated with " . $seq->id . " - updating database\n");
  }

  if (defined($old_seq) && index($old_seq->seq,$seq->seq) == 0) {
    print("DNA not changed for " . $seq->id . " - not updating database\n");
  } else {
    if (defined($old_seq)) {
      print("DNA changed for "  . $seq->id . " "  . $seq->seq_len . 
	    " - updating database\n");
    }
    my $contig     = new Bio::EnsEMBL::PerlDB::Contig;
    $contig->seq($seq);
    
    my $result     = $obj->write_Contig($contig,$clone);

    print("ERROR: Contig " . $seq->id . " not entered into database\n") unless $result;
  }
}


