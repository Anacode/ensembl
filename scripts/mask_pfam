#!/usr/local/bin/perl 

$|=1;

use strict;

use Getopt::Long;

use Bio::SeqIO;
use Bio::EnsEMBL::DBSQL::DBAdaptor;
use Bio::EnsEMBL::DBSQL::Protein_Adaptor;

my $dbtype   = 'rdb';
my $host     = 'ensrv1.sanger.ac.uk';
my $dbname   = 'ensembl100';
my $dbuser   = 'ensro';
my $path     = 'UCSC';
my $outfile;

&GetOptions( 
	    'host=s'       => \$host,
	    'dbname=s'     => \$dbname,
	    'dbuser=s'     => \$dbuser,
	    'path:s'       => \$path,
	    'outfile:s'    => \$outfile,
	   );

my $fh = \*STDOUT;

if (defined($outfile)) {
  open(OUT,">$outfile") || die "Couldn't open output file $outfile";
  $fh = \*OUT;
}

my $seqio = new Bio::SeqIO(-format => 'fasta',-fh => $fh);

my %contig;
my $fh;

my $db            = new Bio::EnsEMBL::DBSQL::DBAdaptor(-host   => $host,
						       -dbname => $dbname,
						       -user   => $dbuser);

my @tranids         = $db->gene_Obj->get_all_Transcript_id;
my $protein_adaptor = Bio::EnsEMBL::DBSQL::Protein_Adaptor->new($db);


foreach my $id (@tranids) {
  eval {
    my $transcr  = $db->gene_Obj->get_Transcript($id);
    my $seq      = $transcr->translate;
    my $seqstr   = $seq->seq;
    my $protein  = $protein_adaptor->fetch_Protein_by_transcriptId($id);

    my @feat = $protein->each_Protein_feature;
    
    foreach my $feat (@feat) {

      if (ref($feat) ne "" && $feat->isa("Bio::EnsEMBL::Protein_FeaturePair")) {
	my $start = $feat->start;
	my $end   = $feat->end;
	
	my $str   = 'N' x ($end-$start+1);
	
	substr($seqstr,$start,($end-$start+1)) = $str;
      }
    }
    $seq->seq($seqstr);
    $seqio->write_seq($seq);
  };
  if ($@) {
    print STDERR "Couldn't process $id [$@]\n";
  }
}
  
